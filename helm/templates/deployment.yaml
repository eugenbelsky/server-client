apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helm.fullname" . }}-frontend
  labels:
    {{- include "helm.labels" . | nindent 4 }}
    component: frontend
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "helm.selectorLabels" . | nindent 6 }}
      component: frontend
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "helm.selectorLabels" . | nindent 8 }}
        component: frontend
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "helm.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.imageFrontend.repository }}:{{ .Values.imageFrontend.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.imageFrontend.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # env:
          # - name: PG_USER
          #   value: {{ .Values.postgresql.auth.username }}
          # - name: PG_PASSWORD
          #   value: {{ .Values.postgresql.auth.password }}
          # - name: PG_DATABASE
          #   value: {{ .Values.postgresql.auth.database }}
          # - name: PG_HOST
          #   value: {{ include "postgresql.primary.fullname" . }}
          # - name: PG_PORT
          #   value: "{{ int .Values.postgresql.service.ports.postgresql }}"
          # - name: FE_HOST
          #   value: {{ include "helm.fullname" . }}-frontend
          # - name: FE_PORT
          #   value: "80"
          resources:
            {{- toYaml .Values.resources | nindent 12 }}            
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "helm.fullname" . }}-backend
  labels:
    {{- include "helm.labels" . | nindent 4 }}
    component: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "helm.selectorLabels" . | nindent 6 }}
      component: backend
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "helm.selectorLabels" . | nindent 8 }}
        component: backend
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "helm.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.imageBackend.repository }}:{{ .Values.imageBackend.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.imageBackend.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
          - name: PG_USER
            value: {{ .Values.postgresql.auth.username }}
          - name: PG_PASSWORD
            value: {{ .Values.postgresql.auth.postgresPassword }}
          - name: PG_DATABASE
            value: {{ .Values.postgresql.auth.database }}
          - name: PG_HOST
            value: {{ include "postgresql.primary.fullname" . }}-postgresql
          - name: PG_PORT
            value: "{{ int .Values.postgresql.service.ports.postgresql }}"
          - name: FE_HOST
            value: {{ include "helm.fullname" . }}-frontend
          - name: FE_PORT
            value: "80"
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}