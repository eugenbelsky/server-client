# This is a basic workflow to help you get started with Actions

name: CI

on:
  push:
    branches: [main]

  workflow_dispatch:

env:
  GKE_PROJECT: "569001775650"
  GKE_CLUSTER: server-client-cluster
  GKE_ZONE: europe-west3-a
  RELEASE_NAME: server-client


jobs:
  ## test:

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Build and push frontend to  docker repository
      - name: Build and Push Frontend Docker Image
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          tags: latest
          dockerfile: frontend/Dockerfile
          directory: frontend
          image: eugnebelskyi/server-client-frontend
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build and push backend to frontend docker repository
      - name: Build and Push Frontend Docker Image
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          tags: latest
          dockerfile: backend/Dockerfile
          directory: backend
          image: eugnebelskyi/server-client-backend
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Install Helm
      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
        
      # Authenticate Helm


      # Build and push helm chart to docker repository
      # - name: Build and Push Helm Chart
      #   uses: appany/helm-oci-chart-releaser@v0.3.0
      #   with:
      #     name: server-client-helm
      #     repository: eugnebelskyi
      #     tag: 0.1.0
      #     path: ./helm 
      #     registry: docker.io
      #     registry_username: ${{ secrets.DOCKER_USERNAME }}
      #     registry_password: ${{ secrets.DOCKER_PASSWORD }}

  provision:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Terraform setup
        uses: hashicorp/setup-terraform@v1

      - name: Terraform init
        working-directory: ./terraform
        run: terraform init
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS}}

      - name: Terraform fmt
        working-directory: ./terraform
        run: terraform fmt -check

      - name: Terraform plan
        working-directory: ./terraform
        run: terraform plan
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS}}

      - name: Terraform apply
        working-directory: ./terraform
        run: terraform apply -auto-approve
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS}}

  deploy:
    needs: [build,provision]
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@v0.6.0
        with:
          service_account_key: ${{ secrets.GOOGLE_CREDENTIALS }}
          project_id: ${{ env.GKE_PROJECT }}
      
      # Get the GKE credentials so we can deploy to the cluster
      - uses: google-github-actions/get-gke-credentials@v0.7.0
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.GOOGLE_CREDENTIALS }}
        

      # # Install Helm
      # - name: Install Helm
      #   run: |
      #     curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

      # Install Helm
      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

      # # Deploy Postgres
      # - name: Deploy Postgres
      #   run: |
      #     helm repo add bitnami https://charts.bitnami.com/bitnami \
      #     && helm repo update \
      #     && helm upgrade --atomic -i postgres bitnami/postgresql

      
      # Deploy Application
      - name:  Deploy Application
        run: |
          helm upgrade --atomic --dependency-update  --create-namespace --cleanup-on-fail  -i $RELEASE_NAME ./helm \
          --wait


      